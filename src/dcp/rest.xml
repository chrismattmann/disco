<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright (c) 2006 University of Southern California.
 * All rights reserved.                                            
 *                                                                
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation, 
 * advertising materials, and other materials related to such 
 * distribution and use acknowledge that the software was 
 * developed by the Software Architecture Research Group at the 
 * University of Southern Calfornia.  The name of the University may 
 * not be used to endorse or promote products derived from this software 
 * without specific prior written permission.
 * 
 * Any questions, comments, or or corrections should be mailed to the author 
 * of this code, Chris Mattmann, at: mattmann@usc.edu
 *
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED 
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE.
 * 
 * Author: Chris A. Mattmann
 * Revision: 1.0
 -->
<disco:connector xmlns:disco="http://softarch.usc.edu/1.0/disco" name="HTTP/REST" class="Client/Server">
  <procedurecall>
    <parameters>
      <datatransfer>
        <method>value</method>
      </datatransfer>
      <semantics>keyword</semantics>
      <returnvalue>HTTP Response</returnvalue>
      <invocationrecord>HTTP Server log</invocationrecord>
    </parameters>
    <entrypoint>
      <single>Socket Listener, Port 80 (Server) HTTP formatted 
      request sent through socket to port 80 (Client).
      </single>
     </entrypoint>
     <invocation>
       <explicit>Method Call</explicit>
     </invocation>
     <synchronicity>Synchronous</synchronicity>
     <cardinality sender="1" receiver="1"/>
     <accessibility private="false" public="true" protected="false"/>
  </procedurecall>
  <dataaccess>
    <locality>Global</locality>
    <accesses>
      <access>Accessor</access>
      <access>Mutator</access>
    </accesses>
    <availabilities>
      <transient>Cache</transient>
      <persistents>
        <persistent>Repository Access</persistent>
        <persistent>File I/O</persistent>
        <persistent>Dynamic Data Exchange</persistent>
        <persistent>Database Access</persistent>
      </persistents>
    </availabilities>
    <accessibility private="true" public="true"/>
    <lifecycle/>
    <cardinality senders="1" receivers="1"/>
  </dataaccess>
  <stream>
    <deliveries>
      <delivery>Exactly Once</delivery>
    </deliveries>
    <bounds>Bounded</bounds>
    <buffering>Buffered</buffering>
    <throughput>bps</throughput>
    <state>Stateless</state>
    <identity>Named</identity>
    <localities>
      <locality>Local</locality>
      <locality>Remote</locality>
    </localities>
    <synchronicity>Time Out Synchronous</synchronicity>
    <formats>
      <format>Structured</format>
      <format>Raw</format>
    </formats>
    <cardinality senders="1" receivers="1"/>
  </stream>
  <distributor>
   <naming type="registry-based">
     <structure>Heirarchical</structure>
   </naming>
   <delivery type="HTTP Message">
     <semantics>
        <semantic>Exactly Once</semantic>
     </semantics>
     <mechanisms>
       <mechanism>Unicast</mechanism>
     </mechanisms>
   </delivery>
     <routing type="tcp/ip">
      <membership>ad-hoc</membership>
      <path static="true" dynamic="false" cached="false"/>
    </routing>
  </distributor>
</disco:connector>